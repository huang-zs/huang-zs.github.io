(function(){var n={3455:function(n,e,t){"use strict";t.d(e,{Iz:function(){return a},fq:function(){return i},n3:function(){return r},a5:function(){return s}});t(1703),t(6699);var o=JSON.parse('{"java":{"title":"Java","subTitle":"一种跨平台、面向对象的计算机编程语言","description":"Java是Sun公司推出的能够跨越多平台的、可移植性最高的一种面向对象的编程语言，也是目前最先进、特征最丰富、功能最强大的计算机语言。利用Java可以编写桌面应用程序、Web应用程序、分布式系统应用程序、嵌入式系统应用程序等，从而使其成为应用最广泛的开发语言。","img":"/image/backend/java/java.png","doc":"https://www.runoob.com/java/java-tutorial.html","childrens":{"bloom-filter":{"title":"布隆过滤器的原理和实现","description":"布隆过滤器的原理和实现","img":"https://cdn.pixabay.com/photo/2022/02/16/14/47/bird-7016926_1280.jpg"},"idea":{"title":"IDEA配置和快捷键","description":"用了sts三年了，网上都推荐idea，试试是不是传说中那么香，顺便记录一下一些基本配置和常用快捷键","img":"https://cdn.pixabay.com/photo/2022/05/31/18/40/hedge-7234019_1280.jpg"},"regex":{"title":"正则表达式","description":"工作三年了，实习生拿了个正则表达式（.+?）来问我，我一时间没回答上来，发现自己还是太菜了，所以决定把用法复习一遍","img":"https://cdn.pixabay.com/photo/2022/05/31/16/47/automobile-7233867_960_720.jpg"},"singleton":{"title":"单例模式","description":"单例模式是面试中经常会被问到的一个问题，记录一下常见的单例模式","img":"https://cdn.pixabay.com/photo/2022/06/12/05/45/animal-7257336_960_720.jpg"}}},"spring":{"title":"Spring","subTitle":"一个轻量级的基于控制反转(IoC)、面向切面(AOP)的容器框架。","description":"Spring 是一个开源框架，是为了解决企业应用程序开发复杂性而创建的。框架的主要优势之一就是其分层架构，分层架构允许您选择使用哪一个组件，同时为 J2EE 应用程序开发提供集成的框架。Spring使用基本的JavaBean来完成以前只可能由EJB完成的事情。任何 Java 应用都可以从 Spring 中受益。Spring 的核心是控制反转（IoC）和面向切面（AOP）。简单来说，Spring 是一个分层的 JavaSE/EE full-stack(一站式) 轻量级开源框架。","img":"/image/backend/spring/spring.png","doc":"https://spring.io/projects/spring-framework"},"springboot":{"title":"Springboot","subTitle":"一个简化spring应用搭建和开发的框架。","description":"Spring Boot 是 Pivotal 团队在 Spring 的基础上提供的一套全新的开源框架，其目的是为了简化 Spring 应用的搭建和开发过程。Spring Boot 去除了大量的 XML 配置文件，简化了复杂的依赖管理。","img":"/image/backend/springboot/springboot.png","doc":"https://spring.io/projects/spring-boot"},"springcloud":{"title":"Springcloud","subTitle":"一个一站式的分布式开发框架","description":"Spring Cloud为开发人员提供了快速构建分布式系统中一些常见模式的工具(比如：配置管理，服务发现，断路器，智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理等)。开发分布式系统都需要解决一系列共同关心的问题，而使用Spring Cloud可以快速地实现这些分布式开发共同关心的问题，并能方便地在任何分布式环境中部署与运行。","img":"/image/backend/springcloud/springcloud.png","doc":"https://spring.io/projects/spring-cloud"},"html":{"title":"Html","subTitle":"一种用于创建网页的标准标记语言。","description":"HTML是一种基础技术，常与CSS、JavaScript一起被众多网站用于设计网页、网页应用程序以及移动应用程序的用户界面[3]。网页浏览器可以读取HTML文件，并将其渲染成可视化网页。","img":"/image/frontend/html/html.png","doc":"https://www.runoob.com/html/html-tutorial.html"},"vue":{"title":"Vue","subTitle":"一套用于构建用户界面的渐进式框架","description":"Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。","img":"/image/frontend/vue/vue.png","doc":"https://v3.cn.vuejs.org/guide/introduction.html","childrens":{"reuse-component-router-bug":{"title":"vue组件重用路由不刷新","description":"在使用vue-router时，经常会用到带参数的动态路由如 { path: \'/users/:id\', component: User }，当用户从 /users/johnny 导航到 /users/jolyne 时，因为指向的都是同一个组件，相同的组件实例将被重复使用（组件的生命周期钩子不会被调用），所以出现页面数据没有刷新的情况。","img":"https://cdn.pixabay.com/photo/2022/04/12/09/03/bird-7127630_1280.jpg"}}},"bug":{}}');function r(n){try{const e=o[n];return e.name=n,e}catch(e){throw Error(`category[${n}] not exist`)}}function i(n,e){try{const t=r(n).childrens[e];return t.name=e,t}catch(t){throw Error(`category[${n}] article[${e}] not exist`)}}function a(){const n=t(1898).keys();n.forEach((n=>{const e=n.split("/");if(e.length>2){const n=e[e.length-2],t=e[e.length-1];i(n,t.substring(0,t.indexOf(".vue")))}}));for(const t in o){const i=o[t];for(var e in i.childrens){var r=!1;for(let o=n.length-1;o>=0;o--)if(n[o].endsWith(`${t}/${e}.vue`)){r=!0,n.splice(o,1);break}if(!r)throw Error(`category[${t}] article[${e}] view not exist`)}}}function s(n){const e=[];for(const t in o){const r=o[t];for(const t in r.childrens){const o=r.childrens[t];(t.toLowerCase().includes(n)||null!=o.description&&o.description.toLowerCase().includes(n))&&e.push(o)}}return e}},3979:function(n,e,t){"use strict";var o=t(3455),r=t(9242),i=t(3396);function a(n,e,t,o,r,a){const s=(0,i.up)("router-view"),l=(0,i.up)("right-main"),c=(0,i.up)("left-sidebar");return(0,i.wg)(),(0,i.iD)(i.HY,null,[(0,i.Wm)(l,null,{default:(0,i.w5)((()=>[((0,i.wg)(),(0,i.j4)(s,{key:a.key}))])),_:1}),(0,i.Wm)(c)],64)}const s={id:"sidebar"},l={class:"inner"};function c(n,e,t,o,r,a){const c=(0,i.up)("sidebar-search"),u=(0,i.up)("sidebar-menu"),d=(0,i.up)("sidebar-footer");return(0,i.wg)(),(0,i.iD)("div",s,[(0,i._)("div",l,[(0,i.Wm)(c),(0,i.Wm)(u),(0,i.Wm)(d)])])}var u=t(7139);const d={id:"menu"},m=(0,i._)("header",{class:"major"},[(0,i._)("h2",null,"Menu")],-1),p={class:"opener"};function g(n,e,t,o,r,a){const s=(0,i.up)("router-link");return(0,i.wg)(),(0,i.iD)("nav",d,[m,(0,i._)("ul",null,[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(r.menuArray,((n,e)=>((0,i.wg)(),(0,i.iD)("li",{key:e},[null==n.childrens?((0,i.wg)(),(0,i.j4)(s,{key:0,to:n.url},{default:(0,i.w5)((()=>[(0,i.Uk)((0,u.zw)(n.name),1)])),_:2},1032,["to"])):((0,i.wg)(),(0,i.iD)(i.HY,{key:1},[(0,i._)("span",p,(0,u.zw)(n.name),1),(0,i._)("ul",null,[((0,i.wg)(!0),(0,i.iD)(i.HY,null,(0,i.Ko)(n.childrens,((n,e)=>((0,i.wg)(),(0,i.iD)("li",{key:e},[(0,i.Wm)(s,{to:n.url},{default:(0,i.w5)((()=>[(0,i.Uk)((0,u.zw)(n.name),1)])),_:2},1032,["to"])])))),128))])],64))])))),128))])])}var h=JSON.parse('[{"name":"home"},{"name":"frontend","childrens":[{"name":"html"},{"name":"vue"}]},{"name":"backend","childrens":[{"name":"java"},{"name":"spring"},{"name":"springboot"},{"name":"springcloud"}]},{"name":"bug"}]');h.forEach((n=>{const e="/"+n.name;n.url=e,null!=n.childrens&&n.childrens.forEach((n=>{n.url=e+"/"+n.name}))}));var f={name:"SidebarMenu",data(){return{menuArray:h}}},v=t(89);const b=(0,v.Z)(f,[["render",g]]);var y=b;const w={id:"search",class:"alt"},z={action:"javascript:;"};function S(n,e,t,o,a,s){return(0,i.wg)(),(0,i.iD)("section",w,[(0,i._)("form",z,[(0,i.wy)((0,i._)("input",{type:"text","onUpdate:modelValue":e[0]||(e[0]=n=>a.query=n),placeholder:"Search",onKeyup:e[1]||(e[1]=(0,r.D2)(((...n)=>s.articleQuery&&s.articleQuery(...n)),["enter"]))},null,544),[[r.nr,a.query]])])])}var _={name:"SidebarSearch",data(){return{query:null}},methods:{articleQuery(){this.$router.push({name:"search",query:{q:this.query}})}}};const k=(0,v.Z)(_,[["render",S]]);var A=k;const C={id:"footer"},j=(0,i._)("p",{class:"copyright"},"© Untitled. All rights reserved.",-1),x=[j];function D(n,e,t,o,r,a){return(0,i.wg)(),(0,i.iD)("footer",C,x)}var E={name:"SidebarFooter"};const T=(0,v.Z)(E,[["render",D]]);var L=T,$={name:"LeftSidebar",components:{SidebarMenu:y,SidebarSearch:A,SidebarFooter:L}};const U=(0,v.Z)($,[["render",c]]);var W=U;const M={id:"main"},P={class:"inner"};function I(n,e,t,o,r,a){const s=(0,i.up)("main-header");return(0,i.wg)(),(0,i.iD)("div",M,[(0,i._)("div",P,[(0,i.Wm)(s),(0,i.WI)(n.$slots,"default")])])}const Z={id:"header"},O=(0,i._)("strong",null,"Power",-1),B=(0,i.Uk)(" by huang-zs "),H=(0,i._)("iframe",{style:{position:"absolute",right:"0"},src:"https://ghbtns.com/github-btn.html?user=huang-zs&repo=huang-zs.github.io&type=star&count=true",frameborder:"0",scrolling:"0",title:"GitHub",width:"100px"},null,-1);function q(n,e,t,o,r,a){const s=(0,i.up)("router-link");return(0,i.wg)(),(0,i.iD)("header",Z,[(0,i.Wm)(s,{to:"/",class:"logo"},{default:(0,i.w5)((()=>[O,B])),_:1}),H])}var R={name:"TopHeader"};const N=(0,v.Z)(R,[["render",q]]);var F=N,X={name:"RightMain",components:{MainHeader:F}};const Y=(0,v.Z)(X,[["render",I]]);var G=Y,J={name:"app",components:{LeftSidebar:W,RightMain:G},computed:{key(){return this.$route.fullPath+new Date}}};const K=(0,v.Z)(J,[["render",a]]);var V=K,Q=t(678);const nn=[{path:"/",redirect:"/home"},{path:"/:category+",name:"category",component:()=>t.e(908).then(t.bind(t,2908))},{path:"/search",name:"search",component:()=>t.e(697).then(t.bind(t,5697))}],en=(0,Q.p7)({history:(0,Q.r5)("/"),routes:nn}),tn=t(1898);tn.keys().forEach((n=>{const e=n.match(/\.(.*)\.vue$/)[1];en.addRoute({path:e,name:e.substring(e.lastIndexOf("/")+1),component:()=>t(9331)(`./views${e}`)})}));var on=en,rn=(t(4689),t(762));(0,o.Iz)(),(0,r.ri)(V).use(on).use(rn.Z).mount("#wrapper")},1564:function(n,e,t){"use strict";t.d(e,{Z:function(){return y}});var o=t(3396);const r={class:"article"},i=(0,o._)("hr",{class:"major"},null,-1);function a(n,e,t,a,s,l){const c=(0,o.up)("article-banner");return(0,o.wg)(),(0,o.iD)("section",r,[(0,o.Wm)(c),i,(0,o.WI)(n.$slots,"default")])}var s=t(7139);const l={class:"image main"},c=["src"],u={class:"main"};function d(n,e,t,r,i,a){return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o._)("span",l,[(0,o._)("img",{src:i.article.img},null,8,c)]),(0,o._)("header",u,[(0,o._)("h1",null,(0,s.zw)(i.article.title),1)]),(0,o._)("p",null,(0,s.zw)(i.article.description),1)],64)}var m=t(3455),p={name:"ArticleBanner",data(){return{article:{}}},mounted(){const n=this.$route.path.split("/");this.article=(0,m.fq)(n[n.length-2],n[n.length-1])}},g=t(89);const h=(0,g.Z)(p,[["render",d]]);var f=h,v={name:"ArticleInfoItem",components:{ArticleBanner:f}};const b=(0,g.Z)(v,[["render",a]]);var y=b},8805:function(n,e,t){"use strict";t.d(e,{Z:function(){return h}});var o=t(3396),r=t(7139);const i={id:"banner"},a={class:"content"},s={class:"actions"},l=["href"],c={class:"image object"},u=["src"];function d(n,e,t,d,m,p){return(0,o.wg)(),(0,o.iD)("section",i,[(0,o._)("div",a,[(0,o._)("header",null,[(0,o._)("h1",null,(0,r.zw)(t.title),1),(0,o._)("p",null,(0,r.zw)(t.subTitle),1)]),(0,o._)("p",null,(0,r.zw)(t.description),1),(0,o._)("ul",s,[(0,o._)("li",null,[(0,o._)("a",{href:t.doc,class:"button big",target:"_blank"},"Learn More",8,l)])])]),(0,o._)("span",c,[(0,o._)("img",{src:t.img},null,8,u)])])}var m={name:"BannerItem",props:{title:{required:!0},description:{default:"default description"},img:{default:"/image/default.jpg"},doc:{default:"https://github.com/huang-zs/huang-zs.github.io"},subTitle:{default:""}}},p=t(89);const g=(0,p.Z)(m,[["render",d]]);var h=g},656:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return k}});var o=t(3396);function r(n,e,t,r,i,a){const s=(0,o.up)("banner"),l=(0,o.up)("util-set");return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o.Wm)(s,{img:i.img,description:i.description,title:i.title,subTitle:i.subTitle},null,8,["img","description","title","subTitle"]),(0,o.Wm)(l)],64)}var i=t(8805);const a=(0,o._)("header",{class:"major"},[(0,o._)("h2",null,"常用网址")],-1),s={class:"features"};function l(n,e,t,r,i,l){const c=(0,o.up)("util-item");return(0,o.wg)(),(0,o.iD)("section",null,[a,(0,o._)("div",s,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(i.utilArray,(n=>((0,o.wg)(),(0,o.j4)(c,{key:n.title,title:n.title,icon:n.icon,description:n.description,link:n.link},null,8,["title","icon","description","link"])))),128))])])}var c=t(7139);const u={class:"content"},d=["href"];function m(n,e,t,r,i,a){return(0,o.wg)(),(0,o.iD)("article",null,[(0,o._)("span",{class:(0,c.C_)(["icon",t.icon])},null,2),(0,o._)("div",u,[(0,o._)("a",{href:t.link},[(0,o._)("h3",null,(0,c.zw)(t.title),1)],8,d),(0,o._)("p",null,(0,c.zw)(t.description),1)])])}var p={name:"UtilItem",props:{icon:{require:!0},title:{require:!0},description:{require:!0},link:{require:!0}}},g=t(89);const h=(0,g.Z)(p,[["render",m]]);var f=h,v=JSON.parse('[{"title":"Stackoverflow","description":"Stackoverflow是一个与程序相关的IT技术问答网站。用户可以在网站免费提交问题，浏览问题，索引相关内容。","icon":"icon-stackoverflow","link":"https://stackoverflow.com/"},{"title":"Github","description":"GitHub 是一个面向开源及私有软件项目的托管平台，用户可以探寻自己感兴趣的项目、分享源代码、交流学习。","icon":"icon-github","link":"https://github.com/"},{"title":"Docker","description":"Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。","icon":"icon-docker","link":"https://hub.docker.com/"},{"title":"Maven","description":"Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的项目管理工具软件","icon":"icon-maven","link":"https://mvnrepository.com/"}]'),b=v,y={name:"UtilSetItem",components:{UtilItem:f},data(){return{utilArray:b}}};const w=(0,g.Z)(y,[["render",l]]);var z=w,S={name:"home-view",components:{Banner:i.Z,UtilSet:z},data(){return{img:"/image/yiquanchaoren.jpeg",title:"Hi,我是huang-zs",subTitle:"一个正在变强的java开发",description:"欢迎大家来到我的博客，这个网站使用vue编写，交由github page托管。你能看到有关前端、后端、服务器技术的心得和一些遇到的bug的fix，如果帮助到你star是给我最大的鼓励，同样的如果内容有任何问题可以给我提issue。没有最卷，只有更卷，我们要用知识武装自己，脚踏需求，手撕bug，升职加薪迎娶白富美，走向人生巅峰！"}}};const _=(0,g.Z)(S,[["render",r]]);var k=_},867:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return u}});var o=t(3396);const r=(0,o.Uk)("test");function i(n,e,t,i,a,s){const l=(0,o.up)("article-info-item");return(0,o.wg)(),(0,o.j4)(l,null,{default:(0,o.w5)((()=>[r])),_:1})}var a=t(1564),s={name:"bloom-filter",components:{ArticleInfoItem:a.Z}},l=t(89);const c=(0,l.Z)(s,[["render",i]]);var u=c},1730:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return z}});var o=t(3396),r=t(7139);const i=(0,o._)("h2",null,"常用配置",-1),a={class:"table-wrapper"},s=(0,o._)("thead",null,[(0,o._)("tr",null,[(0,o._)("th",null,"Name"),(0,o._)("th",null,"操作")])],-1),l=(0,o._)("hr",{class:"major"},null,-1),c=(0,o._)("h2",null,"常用快捷键",-1),u={class:"table-wrapper"},d={class:"alt"},m=(0,o._)("hr",{class:"major"},null,-1),p=(0,o._)("h2",null,"常用插件",-1),g={class:"table-wrapper"},h=(0,o._)("thead",null,[(0,o._)("tr",null,[(0,o._)("th",null,"Name"),(0,o._)("th",null,"Description")])],-1);function f(n,e,t,f,v,b){const y=(0,o.up)("article-info-item");return(0,o.wg)(),(0,o.j4)(y,null,{default:(0,o.w5)((()=>[i,(0,o._)("div",a,[(0,o._)("table",null,[s,(0,o._)("tbody",null,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(v.commonConfigArray,((n,e)=>((0,o.wg)(),(0,o.iD)("tr",{key:e},[(0,o._)("td",null,(0,r.zw)(n.name),1),(0,o._)("td",null,(0,r.zw)(n.operate),1)])))),128))])])]),l,c,((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(v.commonCommandArray,((n,e)=>((0,o.wg)(),(0,o.iD)("div",{key:e},[(0,o._)("h4",null,(0,r.zw)(e),1),(0,o._)("div",u,[(0,o._)("table",d,[(0,o._)("tbody",null,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(n,((n,e)=>((0,o.wg)(),(0,o.iD)("tr",{key:e},[(0,o._)("td",null,(0,r.zw)(n.operate),1),(0,o._)("td",null,(0,r.zw)(n.description),1)])))),128))])])])])))),128)),m,p,(0,o._)("div",g,[(0,o._)("table",null,[h,(0,o._)("tbody",null,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(v.commonPluginArray,((n,e)=>((0,o.wg)(),(0,o.iD)("tr",{key:e},[(0,o._)("td",null,(0,r.zw)(n.name),1),(0,o._)("td",null,(0,r.zw)(n.description),1)])))),128))])])])])),_:1})}var v=t(1564),b={name:"idea-view",components:{ArticleInfoItem:v.Z},data(){return{commonConfigArray:[{name:"关闭idea更新检查",operate:"Appearance & Behavior -> System Settings -> Updates =>取消勾选Check IDE updates for"},{name:"自动导包",operate:"Editor->General->Auto Import=>勾选Add unambiguous imports on the fly,勾选Optimize imports on the fly"},{name:"显示方法分隔符",operate:"Editor->General->Appearance=>勾选Show method separators"},{name:"忽略大小写提示",operate:"Editor->General->Code Completion=>取消勾选Match Case"},{name:"星号标识编辑过的文件",operate:"Editor->General->Editor Tabs=>勾选Mark modified (*)"},{name:"设置字体",operate:"Editor->Font"},{name:"生成 serialversuinUID",operate:"Editor -> Inspections -> Java -> Serialization issues -> 勾选Serializable class without 'serialVersionUID'"},{name:"注释模板",operate:"Editor->File and Code Templates"},{name:"设置文件编码",operate:"Editor -> File Encodings=>Global Encoding选择UTF-8,Project Encoding选择UTF-8,Default encoding for properties files选择UTF-8,勾选Transparent native-to-ascli conversion"},{name:"隐藏文件",operate:"Editor->File Types=>Ignore files and folders添加"},{name:"配置maven",operate:"Build,Execution,Deployment->Build Tools->Maven=>Maven home path选择maven安装路径,User settings file选择setting配置文件"},{name:"配置maven下载源码和doc",operate:"Build,Execution,Deployment->Build Tools->Maven->Importing=>Automatically download勾选Sources,Documentation"},{name:"配置gradle",operate:"Build,Execution,Deployment->Build Tools->Gradle=>配置gradle下载路径"},{name:"设置自动编译",operate:"Build,Execution,Deployment->Compiler=>勾选Build project automatically||勾选Compile independent moudules in parallel"},{name:"配置编译版本",operate:"Buil,Execution,Deployment->Compiler->java compiler=>Project byte code version选择8"},{name:"设置默认浏览器",operate:"Tools->Web Browsers and Preview=>Default browser选择First listed"},{name:"配置jdk(?)",operate:"打开项目->file->new projects setup->structure"}],commonCommandArray:{Editing:[{operate:"Ctrl + Space",description:"基本代码补全"},{operate:"Ctrl + Shift + Space",description:"智能代码补全"},{operate:"Ctrl + Shift + Enter",description:"结束代码，行末添加分号"},{operate:"Ctrl + P (Parameter info)",description:"查看参数信息（方法）"},{operate:"Ctrl + Q (Quick documentation lookup)",description:"查看文档，等效于鼠标悬浮"},{operate:"Alt + Insert",description:"生成代码(Getters, Setters,Constructors, hashCode/ equals, toString) "},{operate:"Ctrl + O (Override methods)",description:"重写方法"},{operate:"Ctrl + I (Implement methods)",description:"实现方法"},{operate:"Ctrl + Alt + T",description:"代码环绕(if..else,try..catch, for,synchronized, etc.) "},{operate:"Alt + Enter",description:"显示意图操作和快速修复"},{operate:"Ctrl + Alt + L",description:"格式化代码"},{operate:"Ctrl + Alt + O (Optimize imports)",description:"优化导入"},{operate:"Ctrl + Alt + L",description:"格式化代码"},{operate:"Ctrl + D (Duplicate current line or selected block)",description:"复制代码"},{operate:"Ctrl + Y",description:"删除行"},{operate:"Shift + Enter",description:"开始新的一行"},{operate:"Ctrl + Shift + ]/[",description:"选到结束或开始"},{operate:"Ctrl + F4",description:"关闭活动tab"}],"Usage Search":[{operate:"Ctrl + Alt + F7",description:"查看类或者变量被调用的地方"}],Navigation:[{operate:"Esc",description:"转到编辑器"},{operate:"Shift + Esc",description:"隐藏窗口"},{operate:"Ctrl + G (Go to line)",description:"跳转到指定行"},{operate:"Ctrl + E",description:"查看最近文件"},{operate:"Ctrl + B , Ctrl + Click",description:"跳转到声明，如变量定义的位置"},{operate:"Ctrl + Alt + B",description:"跳转到实现"},{operate:"Ctrl + Shift + I",description:"新窗口查看定义"},{operate:"Ctrl + Shift + B",description:"跳转到类定义"},{operate:"Ctrl + U",description:"跳转到父类或者父方法"},{operate:"Ctrl + ]/[",description:"跳转到结束或开始"},{operate:"Ctrl + F12",description:"查看类结构"},{operate:"Ctrl + H",description:"查看子类"},{operate:"Ctrl + Alt + H",description:"查看方法调用位置"}],"Search/Replace":[{operate:"Double Shift",description:"万能查找"},{operate:"Ctrl + F",description:"当前页面中找"},{operate:"Ctrl + Shift + F",description:"指定路径中找"}]},commonPluginArray:[{name:"Alibaba Java Coding Guidelines",description:"阿里巴巴代码规范"},{name:"Maven Helper",description:"帮助我们查找和排除maven冲突依赖项"},{name:"Translation",description:"翻译，右键选择Translation"},{name:"GsonFormatPlus",description:"json转实体，对接第三方时定义实体很方便"}]}}},y=t(89);const w=(0,y.Z)(b,[["render",f]]);var z=w},8502:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return m}});var o=t(3396),r=t(7139);const i={class:"table-wrapper"},a=(0,o._)("hr",{class:"major"},null,-1);function s(n,e,t,s,l,c){const u=(0,o.up)("highlightjs"),d=(0,o.up)("article-info-item");return(0,o.wg)(),(0,o.j4)(d,null,{default:(0,o.w5)((()=>[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(l.data,((n,e)=>((0,o.wg)(),(0,o.iD)("div",{key:e},[(0,o._)("h2",null,(0,r.zw)(n.name),1),(0,o._)("div",i,[(0,o._)("table",null,[(0,o._)("tbody",null,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(n.charArr,((n,e)=>((0,o.wg)(),(0,o.iD)("tr",{key:e},[(0,o._)("td",null,(0,r.zw)(n.symbol),1),(0,o._)("td",null,(0,r.zw)(n.description),1)])))),128))])])]),(0,o.Wm)(u,{autodetect:"",code:n.code},null,8,["code"]),a])))),128))])),_:1})}var l=t(1564),c={name:"regex-view",components:{ArticleInfoItem:l.Z},data(){return{data:[{name:"普通字符",charArr:[{symbol:"\\",description:"转义"},{symbol:"^",description:"匹配输入开始"},{symbol:"$",description:"匹配输入结束"},{symbol:".",description:'匹配除"\r""\n"之外的任何单个字符'},{symbol:"x|y",description:"匹配集合中任意一个字符"},{symbol:"[xyz]",description:"匹配集合中列出的任意字符"},{symbol:"[^xyz]",description:"匹配集合中未列出的任意字符"},{symbol:"[a-z]",description:"匹配范围内的任意字符"},{symbol:"[^a-z]",description:"匹配非范围内的任意字符"}],code:'@Test\n\tvoid basicCharTest(){\n\t\t//  转义\n\t\tlog.info(""*".matches("\\\\*") {}","*".matches("\\*"));\n\t\t// ^ 匹配开头\n\t\tlog.info(""google".matches("^g.*") {}","google".matches("^g.*"));\n\t\t// $ 匹配结尾\n\t\tlog.info(""google".matches(".*e$") {}","google".matches(".*e$"));\n\t\t// . 匹配除"\\r""\\n"之外的任何单个字符\n\t\tlog.info(""a".matches(".") {}","google".matches("."));\n\t\tlog.info("System.lineSeparator().matches(".*") {}",System.lineSeparator().matches(".*"));\n\t\t// x|y 匹配其中一个\n\t\tlog.info(""x".matches("x|y") {}","x".matches("x|y"));\n\t\tlog.info(""y".matches("x|y") {}","y".matches("x|y"));\n\t\tlog.info(""z".matches("x|y") {}","z".matches("x|y"));\n\t\t// [xyz] 匹配集合中任意一个\n\t\tlog.info(""x".matches("[xyz]") {}","x".matches("[xyz]"));\n\t\tlog.info(""a".matches("[xyz]") {}","a".matches("[xyz]"));\n\t\t// [^xyz] 排除集合中任意一个\n\t\tlog.info(""x".matches("[^xyz]") {}","x".matches("[^xyz]"));\n\t\tlog.info(""a".matches("[^xyz]") {}","a".matches("[^xyz]"));\n\t\t// [a-z] 匹配字符范围\n\t\tlog.info(""a".matches("[a-z]") {}","a".matches("[a-z]"));\n\t\tlog.info(""A".matches("[a-z]") {}","A".matches("[a-z]"));\n\t\t// [^a-z] 排除字符范围\n\t\tlog.info(""a".matches("[^a-z]") {}","a".matches("[^a-z]"));\n\t\tlog.info(""A".matches("[^a-z]") {}","A".matches("[^a-z]"));\n\t}'},{name:"重复修饰符",charArr:[{symbol:"*",description:"匹配前面表达式零次或多次,等价于{0,}"},{symbol:"+",description:"匹配前面表达式一次或多次,等价于{1,}"},{symbol:"?",description:"匹配前面表达式零次或一次,等价于{0,1}"},{symbol:"{n}",description:"匹配前面表达式n次"},{symbol:"{n,}",description:"匹配前面表达式最小n次"},{symbol:"{n,m}",description:"匹配前面表达式最小n次最大m次"},{symbol:"?",description:"非贪心量化,当该字符紧跟在任何一个其他重复修饰符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。"}],code:'@Test\n\tvoid repeatCharTest(){\n\t\t// * 匹配零或多次\n\t\tlog.info(""z".matches("zo*") {}","z".matches("zo*"));\n\t\tlog.info(""zo".matches("zo*") {}","zo".matches("zo*"));\n\t\t// + 匹配一次或多次\n\t\tlog.info(""z".matches("zo+") {}","z".matches("zo+"));\n\t\tlog.info(""zo".matches("zo+") {}","zo".matches("zo+"));\n\t\tlog.info(""zoo".matches("zo+") {}","zoo".matches("zo+"));\n\t\t// ? 匹配零次或一次\n\t\tlog.info(""z".matches("zo?") {}","z".matches("zo?"));\n\t\tlog.info(""zo".matches("zo?") {}","zo".matches("zo?"));\n\t\tlog.info(""zoo".matches("zo?") {}","zoo".matches("zo?"));\n\t\t// {n} 匹配n次\n\t\tlog.info(""zo".matches("zo{2}") {}","zo".matches("zo{2}"));\n\t\tlog.info(""zoo".matches("zo{2}") {}","zoo".matches("zo{2}"));\n\t\t// {n,} 匹配最小n次\n\t\tlog.info(""zo".matches("zo{2,}") {}","zo".matches("zo{2,}"));\n\t\tlog.info(""zoo".matches("zo{2,}") {}","zoo".matches("zo{2,}"));\n\t\tlog.info(""zooo".matches("zo{2,}") {}","zooo".matches("zo{2,}"));\n\t\t// {n,m} 匹配最小n次，最多m次\n\t\tlog.info(""zo".matches("zo{2,3}") {}","zo".matches("zo{2,3}"));\n\t\tlog.info(""zoo".matches("zo{2,3}") {}","zoo".matches("zo{2,3}"));\n\t\tlog.info(""zoooo".matches("zo{2,3}") {}","zoooo".matches("zo{2,3}"));\n\t\t// ？ 非贪心量化\n        String str = "google";\n        Pattern compile = Pattern.compile("go+");\n        Matcher matcher = compile.matcher(str);\n        while (matcher.find()) {\n            log.info("{} : {}", compile, matcher.group());\n        }\n        compile = Pattern.compile("go+?");\n        matcher = compile.matcher(str);\n        while (matcher.find()) {\n            log.info("{} : {}", compile, matcher.group());\n        }\n\t}'},{name:"pattern",charArr:[{symbol:"(pattern)",description:"匹配 pattern 并捕获该匹配的子表达式"},{symbol:"(?:pattern)",description:"匹配pattern但不获取匹配的子字符串"},{symbol:"(?=pattern)",description:"正向肯定预查,在任何匹配pattern的字符串开始处匹配查找字符串,预查不消耗字符"},{symbol:"(?!pattern)",description:"正向否定预查,在任何不匹配pattern的字符串开始处匹配查找字符串。"}],code:'\t@Test\n\tvoid patternCharTest(){\n\t\t// (pattern) 匹配pattern\n\t\tlog.info(""google".matches("g(oogle)") {}","google".matches("g(oogle)"));\n\n\t\t// (?:pattern) 匹配pattern 与 "|"一起使用\n\t\tlog.info(""industry".matches("industr(?:y|ies)") {}","industry".matches("industr(?:y|ies)"));\n\t\tlog.info(""industries".matches("industr(?:y|ies)") {}","industries".matches("industr(?:y|ies)"));\n\n\t\t// (?=pattern) 正向肯定预查,预查不消耗字符,即匹配pattern,但是不消耗pattern的字符\n\t\t// 匹配Windows2000X\n\t\t// 错解，Windows(?=95|98|NT|2000)只匹配了Windows,2000没被消耗,后边从2继续匹配\n\t\tlog.info(""Windows2000X".matches("Windows(?=95|98|NT|2000)X") {}","Windows2000X".matches("Windows(?=95|98|NT|2000)X"));\n\t\t// 正解\n\t\tlog.info(""Windows2000X".matches("Windows(?=95|98|NT|2000)2000X") {}","Windows2000X".matches("Windows(?=95|98|NT|2000)2000X"));\n\n\t\t// (?!pattern) 正向否定预查\n\t\tlog.info(""Windows1000X".matches("Windows(?!95|98|NT|2000)1000X") {}","Windows1000X".matches("Windows(?!95|98|NT|2000)1000X"));\n\t}'},{name:"特殊字符",charArr:[{symbol:"\\b",description:"匹配一个单词边界，也就是指单词和空格间的位置。记忆border"},{symbol:"\\B",description:"匹配非单词边界。"},{symbol:"\\d",description:"匹配一个数字字符。等价于[0-9]。记忆digit"},{symbol:"\\D",description:"匹配一个非数字字符"},{symbol:"\\n",description:"匹配一个换行符。记忆new line"},{symbol:"\\r",description:"匹配一个回车符。记忆return"},{symbol:"\\s",description:"匹配任何空白字符。记忆space"},{symbol:"\\S",description:"匹配任何非空白字符"},{symbol:"\\w",description:'匹配包括下划线的任何单词字符。等价于"[A-Za-z0-9_]",记忆word'},{symbol:"\\W",description:"匹配任何非单词字符"},{symbol:"\\un",description:"Unicode转义字符序列,n是一个用四个十六进制数字表示的Unicode字符"},{symbol:"[\\u4e00-\\u9fa5]",description:"匹配中文"},{symbol:"\\num",description:"num为数字,匹配第num个分组,\\1表示匹配第1个分组的内容"}],code:'    @Test\n    void specialCharTest() {\n        // \\b 匹配单词边界\n        log.info("\\"never\\".matches(\\".*er\\\\\\\\b.*\\") {}", "never".matches(".*er\\\\b.*"));\n        log.info("\\"verb\\".matches(\\".*er\\\\\\\\b.*\\") {}", "verb".matches(".*er\\\\b.*"));\n\n        // \\B  匹配非单词边界\n        log.info("\\"never\\".matches(\\".*er\\\\\\\\B.*\\") {}", "never".matches(".*er\\\\B.*"));\n        log.info("\\"verb\\".matches(\\".*er\\\\\\\\B.*\\") {}", "verb".matches(".*er\\\\B.*"));\n\n        // \\d 匹配一个数字字符\n        log.info("\\"1\\".matches(\\"\\\\\\\\d\\") {}", "1".matches("\\\\d"));\n        log.info("\\"a\\".matches(\\"\\\\\\\\d\\") {}", "a".matches("\\\\d"));\n\n        // \\D 匹配一个非数字字符\n        log.info("\\"1\\".matches(\\"\\\\\\\\D\\") {}", "1".matches("\\\\D"));\n        log.info("\\"a\\".matches(\\"\\\\\\\\D\\") {}", "a".matches("\\\\D"));\n\n        // \\n 匹配一个换行符, \\r 匹配一个回车符\n        log.info("System.lineSeparator().matches(\\"\\\\\\\\r\\\\\\\\n\\") {}", System.lineSeparator().matches("\\\\r\\\\n"));\n\n        // \\s 匹配任何空白字符\n        log.info("\\"\\".matches(\\"\\\\\\\\s\\") {}", "".matches("\\\\s"));\n        log.info("\\" \\".matches(\\"\\\\\\\\s\\") {}", " ".matches("\\\\s"));\n        log.info("\\"\t\\".matches(\\"\\\\\\\\s\\") {}", "\t".matches("\\\\s"));\n\n        // \\S 匹配任何非空白字符\n        log.info("\\"a\\".matches(\\"\\\\\\\\S\\") {}", "a".matches("\\\\S"));\n\n        // \\w 匹配包括下划线的任何单词字符\n        log.info("\\"_\\".matches(\\"\\\\\\\\w\\") {}", "_".matches("\\\\w"));\n        log.info("\\"a\\".matches(\\"\\\\\\\\w\\") {}", "a".matches("\\\\w"));\n\n        // \\W 匹配任何非单词字符\n        log.info("\\"+\\".matches(\\"\\\\\\\\W\\") {}", "+".matches("\\\\W"));\n\n        // \\\\un Unicode转义字符序列\n        log.info("\\"黄\\".matches(\\"\\\\\\\\u9ec4\\") {}", "黄".matches("\\\\u9ec4"));\n\n        // \\\\num num为数字,匹配第num个分组\n        List<String> numList = Arrays.asList("a1a", "a2a", "a1b");\n        // \\\\1 替换成第1个分组的内容\n        String numRegex = "(a)(\\\\d)\\\\1";\n        for (String s : numList) {\n            log.info("{} match {} {}", s, numRegex, s.matches(numRegex));\n        }\n\n    }'},{name:"常见用法",code:' @Test\n    void useTest() {\n\n        log.info("================={}=====================","验证电话号码");\n        // 验证电话号码(135,137开头)\n        List<String> phoneList = Arrays.asList("13712345677", "13812345677", "13912345677", "15712345677", "13512345677");\n        String phoneRegex = "^13[57]\\\\d{8}";\n        for (String s : phoneList) {\n            log.info("{} match {} {}", s, phoneRegex, s.matches(phoneRegex));\n        }\n        log.info("================={}=====================","验证用户名");\n\n        // 验证用户名(只能输入汉字、英文、数字和下划线)\n        List<String> nameList = Arrays.asList("大大", "大a1", "a_a2", "a!o", "a-da");\n        String nameRegex = "[\\\\u4e00-\\\\u9fa5\\\\w]*";\n//        String nameRegex = "[\\\\u4e00-\\\\u9fa5A-Za-z_0-9]*";\n        for (String s : nameList) {\n            log.info("{} match {} {}", s, nameRegex, s.matches(nameRegex));\n        }\n\n        log.info("================={}=====================","验证用户密码强度");\n        // 验证用户密码强度(长度6-10位,只能包含英文和数字,至少包括1个大写字母、2个小写字母、1个数字)\n        List<String> passwordList = Arrays.asList("Abc123", "Abbbb", "Ac11111", "a!o", "abc123", "a!aa123", "Aza!aa123", "Abc123456789");\n        String password = "Abc123";\n        // 实现长度6-10位,只能包含英文和数字\n        log.info("{}", password.matches("^[A-Za-z\\\\d]{6,10}$"));\n        // 至少1个大写字母 (?=.*[A-Z]+)\n        log.info("{}", password.matches("^(?=.*[A-Z]+)[A-Za-z\\\\d]{6,10}$"));\n        // 至少2个小写字母 (?=.*[a-z]{2,})\n        log.info("{}", password.matches("^(?=.*[A-Z]+)(?=.*[a-z]{2,})[A-Za-z\\\\d]{6,10}$"));\n        // 至少1个数字 (?=.*\\d+)\n        log.info("{}", password.matches("^(?=.*[A-Z]+)(?=.*[a-z]{2,})(?=.*\\\\d+)[A-Za-z\\\\d]{6,10}$"));\n\n        String passwordRegex = "^(?=.*[A-Z]+)(?=.*[a-z]{2,})(?=.*\\\\d+)[A-Za-z0-9]{6,10}$";\n        for (String s : passwordList) {\n            log.info("{} match {} {}", s, passwordRegex, s.matches(passwordRegex));\n        }\n\n        log.info("================={}=====================","验证邮箱");\n        // 验证邮箱\n        List<String> emailList = Arrays.asList("1234@qq.com", "wang@126.com", "wang123@126.com", "wang123@vip.163.com", "wang_email@outlook.com", "wang.email@gmail.com");\n        String emailRegex = "^\\\\w*(\\\\.\\\\w+)*@\\\\w*(\\\\.\\\\w+)+$";\n        for (String s : emailList) {\n            log.info("{} match {} {}", s, emailRegex, s.matches(emailRegex));\n        }\n\n        log.info("================={}=====================","身份证获取");\n        //身份证获取 省级行政区、地级行政区、县级行政区、生日、性别\n        List<String> idCardList = Arrays.asList("440125199703011214", "44012519970302122X");\n        Pattern idCardPattern = Pattern.compile("^(?<province>\\\\d{2})(?<city>\\\\d{2})(?<county>\\\\d{2})(?<birthday>\\\\d{8})\\\\d{2}(?<sex>\\\\d)(?:\\\\d|X)$");\n        for (String s : idCardList) {\n            Matcher idCardMatcher = idCardPattern.matcher(s);\n            while (idCardMatcher.find()) {\n                log.info("{} province[{}] city[{}] county[{}] birthday[{}] sex[{}]", s, idCardMatcher.group("province"), idCardMatcher.group("city"), idCardMatcher.group("county"), idCardMatcher.group("birthday"), idCardMatcher.group("sex"));\n            }\n        }\n\n        log.info("================={}=====================","数字价格千分位分隔");\n        // 数字价格千分位分隔 123456789转123,456,789\n        String price = "123456789";\n        // 先把后面的第一个逗号搞出来,(?=\\d{3}$)匹配结尾三位数前的位置加逗号\n        log.info("{}", price.replaceAll("(?=\\\\d{3}$)", ","));// 123456,789\n        // 把所有逗号搞出来,(\\d{3})+每三位匹配一次\n        log.info("{}", price.replaceAll("(?=(\\\\d{3})+$)", ",")); // ,123,456,789\n        // 去掉开始的逗号, (?!^)不匹配开头\n        log.info("{}", price.replaceAll("(?!^)(?=(\\\\d{3})+$)", ",")); // 123,456,789\n\n        log.info("================={}=====================","手机号3-4-4分隔");\n        // 手机号3-4-4分隔 12345678910转123-4567-8910\n        String phone = "12345678910";\n        log.info("{}", phone.replaceAll("(?=\\\\d{4}$)", "-")); // 1234567-8910\n        log.info("{}", phone.replaceAll("(?=(\\\\d{4})+$)", "-")); // 123-4567-8910\n\n        log.info("================={}=====================","获取连续重复字符");\n        // 获取连续重复字符\n        Pattern continuousRepeatCharacterPattern = Pattern.compile("(.+)\\\\1+");\n        Matcher continuousRepeatCharacterMatcher = continuousRepeatCharacterPattern.matcher("12323454545666");\n        while (continuousRepeatCharacterMatcher.find()) {\n            log.info("{}", continuousRepeatCharacterMatcher.group(1));\n        }\n\n        log.info("================={}=====================","去首尾空格");\n        // 去首尾空格\n        // 去除空格\n        log.info("{}"," ab ".replaceAll("^\\\\s*|\\\\s*$",""));\n        // 提取非空格\n        log.info("{}"," ab ".replaceAll("^\\\\s*(.*)\\\\s*$","$1"));\n\n        log.info("================={}=====================","获取url query");\n        // 获取url query\n        String query="?sex=boy&name=test&age=&age=100";\n        Pattern queryPattern = Pattern.compile("([^&=?]+)=?([^&]*)");\n        Matcher  queryMatcher = queryPattern.matcher(query);\n        while (queryMatcher.find()){\n            log.info("{}",queryMatcher.group());\n        }\n        log.info("================={}=====================", "姓名脱敏");\n        // 姓名脱敏\n        List<String> nameList2 = Arrays.asList("张三", "张三三", "张三三三");\n        for (String s : nameList2) {\n            log.info(chineseNameDesensitization(s));\n        }\n    }\n\n    private String chineseNameDesensitization(String name) {\n        if (name == null || "".equals(name)) {\n            return name;\n        }\n\n        if (name.length() == 2) {\n            name = name.replaceAll("(.)(.)", "*$2");\n        } else {\n            name = name.replaceAll("(.).*(.)", "$1" + String.join("", Collections.nCopies(name.length() - 2, "*")) + "$2");\n        }\n\n        return name;\n\n    }\n    }'}]}}},u=t(89);const d=(0,u.Z)(c,[["render",s]]);var m=d},5939:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return d}});var o=t(3396),r=t(7139);const i=(0,o._)("hr",{class:"major"},null,-1);function a(n,e,t,a,s,l){const c=(0,o.up)("highlightjs"),u=(0,o.up)("article-info-item");return(0,o.wg)(),(0,o.j4)(u,null,{default:(0,o.w5)((()=>[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(s.singletonArray,((n,e)=>((0,o.wg)(),(0,o.iD)("div",{key:e},[(0,o._)("h2",null,(0,r.zw)(n.name),1),(0,o.Wm)(c,{autodetect:"",code:n.code},null,8,["code"]),i])))),128))])),_:1})}var s=t(1564),l={name:"singleton-view",components:{ArticleInfoItem:s.Z},data(){return{singletonArray:[{name:"饿汉式单例",code:"\n/**\n * 饿汉式单例<p>\n * 类一加载就创建对象,不管是否使用都会创建<p>\n * 优点：线程安全，没有加锁，执行效率较高<p>\n * 缺点：不是懒加载，类加载时就初始化，浪费内存空间<p>\n *\n * @author Administrator\n */\npublic class Singleton {\n    private static Singleton instance = new Singleton();\n\n    private Singleton() {\n    }\n\n    public static Singleton getInstance() {\n        return instance;\n    }\n\n    public void doSomething() {\n        System.out.println(this);\n    }\n\n}"},{name:"双重校验锁",code:"/**\n * 双重校验锁,懒汉式单例<p>\n * 双重校验指两次非空判断，synchronized加锁，volatile保证可见性和禁止指令重排序<p>\n * 优点：懒加载，线程安全，效率较高<p>\n *\n * @author Administrator\n */\npublic class Singleton2 {\n    private static volatile Singleton2 instance;\n\n    private Singleton2() {\n    }\n\n    public static  Singleton2 getInstance() {\n        if (instance == null) {\n            synchronized (Singleton2.class) {\n                if (instance == null) {\n                    instance = new Singleton2();\n                }\n            }\n        }\n        return instance;\n    }\n    public void doSomething(){\n        System.out.println(this);\n    }\n}\n"},{name:"静态内部类",code:"/**\n * 静态内部类,懒汉式单例<p>\n * 利用静态内部类延迟初始化的特性实现<p>\n * 优点：懒加载，线程安全，效率较高，实现简单<p>\n *\n * @author Administrator\n */\npublic class Singleton3 {\n\n    private Singleton3() {\n    }\n\n    private static class SingletonHolder {\n\n        private static final Singleton3 instance = new Singleton3();\n    }\n\n\n    public static Singleton3 getInstance() {\n        return SingletonHolder.instance;\n    }\n\n    public void doSomething(){\n        System.out.println(this);\n    }\n\n}"},{name:"枚举",code:"/**\n * 枚举单例<p>\n * 利用枚举是单例的特性<p>\n * 优点：简单，高效，线程安全<p>\n *\n * @author Administrator\n */\npublic enum Singleton4 {\n    INSTANCE;\n\n    public void doSomething() {\n        System.out.println(this);\n    }\n}"}]}}},c=t(89);const u=(0,c.Z)(l,[["render",a]]);var d=u},4873:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return f}});var o=t(3396);const r=(0,o._)("h2",null,[(0,o._)("a",{href:"https://router.vuejs.org/zh/guide/essentials/dynamic-matching.html#%E5%93%8D%E5%BA%94%E8%B7%AF%E7%94%B1%E5%8F%82%E6%95%B0%E7%9A%84%E5%8F%98%E5%8C%96",target:"_blank"},"1. 官方文档提供的解决方案")],-1),i=(0,o._)("p",null,[(0,o.Uk)(" 使用 "),(0,o._)("a",{href:"https://v3.cn.vuejs.org/guide/reactivity-computed-watchers.html#watch",target:"_blank"},"watch"),(0,o.Uk)(" api 监听 "),(0,o._)("code",null,"$route"),(0,o.Uk)(" 对象上的任意属性，如 "),(0,o._)("code",null,"$route.params"),(0,o.Uk)(": ")],-1),a=(0,o._)("p",null,[(0,o.Uk)(" 使用 "),(0,o._)("a",{href:"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html",target:"_blank"},"beforeRouteUpdate"),(0,o.Uk)(" 导航守卫 ： ")],-1),s=(0,o._)("hr",{class:"major"},null,-1),l=(0,o._)("h2",null,"2. 网上的解决方案",-1),c=(0,o._)("p",null,[(0,o.Uk)(" 给 "),(0,o._)("code",null,"<router-view/>"),(0,o.Uk)("加上key属性: ")],-1),u=(0,o._)("p",null,[(0,o.Uk)(" 上面的解决方案在使用带查询参数的路由无效，如: "),(0,o._)("code",null,"{ path: '/register', query: { plan: 'private' } }"),(0,o.Uk)("，应该改为: ")],-1);function d(n,e,t,d,m,p){const g=(0,o.up)("highlightjs"),h=(0,o.up)("article-info");return(0,o.wg)(),(0,o.j4)(h,null,{default:(0,o.w5)((()=>[r,i,(0,o.Wm)(g,{autodetect:"",code:m.code1},null,8,["code"]),a,(0,o.Wm)(g,{autodetect:"",code:m.code2},null,8,["code"]),s,l,c,(0,o.Wm)(g,{autodetect:"",code:m.code3},null,8,["code"]),u,(0,o.Wm)(g,{autodetect:"",code:m.code4},null,8,["code"])])),_:1})}var m=t(1564),p={name:"reuse-component-router-bug-item",components:{ArticleInfo:m.Z},data(){return{code1:"const User = {\n  template: '...',\n  created() {\n    this.$watch(\n      () => this.$route.params,\n      (toParams, previousParams) => {\n        // 对路由变化做出响应...\n      }\n    )\n  },\n}",code2:"const User = {\n  template: '...',\n  async beforeRouteUpdate(to, from) {\n    // 对路由变化做出响应...\n  },\n}",code3:'<router-view :key="$route.fullPath" /> ',code4:"<router-view :key=\"key\" />\n      \nconst User = {\n  template: '...',\n  computed: {\n    key() {\n      return this.$route.fullPath + new Date();\n    }\n  }\n}"}}},g=t(89);const h=(0,g.Z)(p,[["render",d]]);var f=h},1898:function(n,e,t){var o={"./Home.vue":656,"./backend/java/bloom-filter.vue":867,"./backend/java/idea.vue":1730,"./backend/java/regex.vue":8502,"./backend/java/singleton.vue":5939,"./frontend/vue/reuse-component-router-bug.vue":4873};function r(n){var e=i(n);return t(e)}function i(n){if(!t.o(o,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return o[n]}r.keys=function(){return Object.keys(o)},r.resolve=i,n.exports=r,r.id=1898},9331:function(n,e,t){var o={"./views/Home":656,"./views/Home.vue":656,"./views/backend/java/bloom-filter":867,"./views/backend/java/bloom-filter.vue":867,"./views/backend/java/idea":1730,"./views/backend/java/idea.vue":1730,"./views/backend/java/regex":8502,"./views/backend/java/regex.vue":8502,"./views/backend/java/singleton":5939,"./views/backend/java/singleton.vue":5939,"./views/frontend/vue/reuse-component-router-bug":4873,"./views/frontend/vue/reuse-component-router-bug.vue":4873};function r(n){return Promise.resolve().then((function(){if(!t.o(o,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}var r=o[n];return t(r)}))}r.keys=function(){return Object.keys(o)},r.id=9331,n.exports=r}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,function(){var n=[];t.O=function(e,o,r,i){if(!o){var a=1/0;for(u=0;u<n.length;u++){o=n[u][0],r=n[u][1],i=n[u][2];for(var s=!0,l=0;l<o.length;l++)(!1&i||a>=i)&&Object.keys(t.O).every((function(n){return t.O[n](o[l])}))?o.splice(l--,1):(s=!1,i<a&&(a=i));if(s){n.splice(u--,1);var c=r();void 0!==c&&(e=c)}}return e}i=i||0;for(var u=n.length;u>0&&n[u-1][2]>i;u--)n[u]=n[u-1];n[u]=[o,r,i]}}(),function(){t.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return t.d(e,{a:e}),e}}(),function(){t.d=function(n,e){for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})}}(),function(){t.f={},t.e=function(n){return Promise.all(Object.keys(t.f).reduce((function(e,o){return t.f[o](n,e),e}),[]))}}(),function(){t.u=function(n){return"js/"+n+"."+{697:"e28433e2",908:"459e75e0"}[n]+".js"}}(),function(){t.miniCssF=function(n){}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"===typeof window)return window}}()}(),function(){t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)}}(),function(){var n={},e="blog:";t.l=function(o,r,i,a){if(n[o])n[o].push(r);else{var s,l;if(void 0!==i)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==o||d.getAttribute("data-webpack")==e+i){s=d;break}}s||(l=!0,s=document.createElement("script"),s.charset="utf-8",s.timeout=120,t.nc&&s.setAttribute("nonce",t.nc),s.setAttribute("data-webpack",e+i),s.src=o),n[o]=[r];var m=function(e,t){s.onerror=s.onload=null,clearTimeout(p);var r=n[o];if(delete n[o],s.parentNode&&s.parentNode.removeChild(s),r&&r.forEach((function(n){return n(t)})),e)return e(t)},p=setTimeout(m.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=m.bind(null,s.onerror),s.onload=m.bind(null,s.onload),l&&document.head.appendChild(s)}}}(),function(){t.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})}}(),function(){t.p="/"}(),function(){var n={143:0};t.f.j=function(e,o){var r=t.o(n,e)?n[e]:void 0;if(0!==r)if(r)o.push(r[2]);else{var i=new Promise((function(t,o){r=n[e]=[t,o]}));o.push(r[2]=i);var a=t.p+t.u(e),s=new Error,l=function(o){if(t.o(n,e)&&(r=n[e],0!==r&&(n[e]=void 0),r)){var i=o&&("load"===o.type?"missing":o.type),a=o&&o.target&&o.target.src;s.message="Loading chunk "+e+" failed.\n("+i+": "+a+")",s.name="ChunkLoadError",s.type=i,s.request=a,r[1](s)}};t.l(a,l,"chunk-"+e,e)}},t.O.j=function(e){return 0===n[e]};var e=function(e,o){var r,i,a=o[0],s=o[1],l=o[2],c=0;if(a.some((function(e){return 0!==n[e]}))){for(r in s)t.o(s,r)&&(t.m[r]=s[r]);if(l)var u=l(t)}for(e&&e(o);c<a.length;c++)i=a[c],t.o(n,i)&&n[i]&&n[i][0](),n[i]=0;return t.O(u)},o=self["webpackChunkblog"]=self["webpackChunkblog"]||[];o.forEach(e.bind(null,0)),o.push=e.bind(null,o.push.bind(o))}();var o=t.O(void 0,[998],(function(){return t(3979)}));o=t.O(o)})();
//# sourceMappingURL=app.a19de63b.js.map